package dto;

// No need to import java.sql.* here.  DTOs should be pure Java objects.
// Only DAOs should deal with java.sql.

public class UserDTO {
    private int userID;
    private String username;
    private String password; // This should ALWAYS be a HASHED password, never plaintext
    private String fullName;
    private String email;
    private String phoneNumber;
    private String address;
    private int roleID;
    private boolean status; // Use boolean for BIT in database

    // Constructors (at least a default and a fully-parameterized one)

    public UserDTO() {
        // Default constructor (good practice to have)
    }

    public UserDTO(int userID, String username, String password, String fullName,
                   String email, String phoneNumber, String address, int roleID, boolean status) {
        this.userID = userID;
        this.username = username;
        this.password = password; // Again, this should be a HASHED password
        this.fullName = fullName;
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.address = address;
        this.roleID = roleID;
        this.status = status;
    }

    // Getters and Setters (for ALL fields)

    public int getUserID() {
        return userID;
    }

    public void setUserID(int userID) {
        this.userID = userID;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password; // Even for a DTO, you should NEVER have a getPassword() that returns a plaintext password!
    }

    public void setPassword(String password) {
        this.password = password;  // This should receive a *hashed* password.
    }

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public int getRoleID() {
        return roleID;
    }

    public void setRoleID(int roleID) {
        this.roleID = roleID;
    }

    public boolean isStatus() { // Use isStatus() for boolean getters
        return status;
    }
    public boolean getStatus() { // Keep getStatus
        return status;
    }

    public void setStatus(boolean status) {
        this.status = status;
    }


    // toString(), equals(), and hashCode() (Good practice for all classes)

    @Override
    public String toString() {
        return "UserDTO{" +
                "userID=" + userID +
                ", username='" + username + '\'' +
                ", fullName='" + fullName + '\'' +
                ", email='" + email + '\'' +
                ", phoneNumber='" + phoneNumber + '\'' +
                ", address='" + address + '\'' +
                ", roleID=" + roleID +
                ", status=" + status +
                '}';
    }

    // equals() and hashCode() are VERY important if you ever use
    // your DTOs in collections (like List, Set, Map).  NetBeans can
    // generate these for you (Source -> Generate Code -> equals() and hashCode()).
    //  Here's an example generated by an IDE:

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        UserDTO userDTO = (UserDTO) o;

        return userID == userDTO.userID;  // Usually, equality is based on the primary key
    }

    @Override
    public int hashCode() {
        return userID; // Consistent with equals()
    }
}